Vagrant.configure("2") do |config|
  # config.trigger.before :up do |trigger|
  #   trigger.info = "Creating 'NATSwitch' Hyper-V switch if it does not exist..."
  #   trigger.run = {privileged: "true", powershell_elevated_interactive: "true", path: "./create-nat-hyperv-switch.ps1"}
  # end

  # config.trigger.before :reload do |trigger|
  #   trigger.info = "Setting Hyper-V switch to 'NATSwitch' to allow for static IP..."
  #   trigger.run = {privileged: "true", powershell_elevated_interactive: "true", path: "./set-hyperv-switch.ps1"}
  # end

  # $script_mysql = <<-SCRIPT
  #   apt-get update && \
  #   apt-get install -y mysql-server-5.7 && \
  #   mysql -e "create user 'phpuser'@'%' identified by 'pass';"
  # SCRIPT

  config.vm.box_check_update = false
  config.vm.box = "bento/ubuntu-16.04"
  config.vm.provider "hyperv"
  config.vm.network "public_network", bridge: "VagrantNet"


  config.vm.provider "hyperv" do |h|
    h.vm_integration_services = {
      guest_service_interface: true
    }
    h.memory = 512
    h.cpus = 1
  end


  config.vm.define "mysqldb" do |mysql|
    #configurações da instalação MySQL omitidas
    mysql.vm.hostname = "XenialMySQLMachine"
    mysql.vm.provider "hyperv" do |h|
      h.vmname = "XenialMySQLMachine"
    end

    mysql.vm.provision "shell",
      inline: "cp /vagrant/chave_rsa /home/vagrant && \
               chmod 600 /home/vagrant/chave_rsa && \
               chown vagrant:vagrant /home/vagrant/chave_rsa"

    mysql.vm.provision "ansible_local" do |ansible|
      # ansible.inventory_path = "./ansible/hosts"
      ansible.install = "true"
      ansible.install_mode = "default"
      ansible.playbook = "./ansible/playbook.yml"
    end
  end


  config.vm.define "phpweb" do |phpweb|
    #aqui vem os passos para instalar PHP
    phpweb.vm.hostname = "XenialPhpMachine"
    phpweb.vm.provider "hyperv" do |h|
      h.vmname = "XenialPhpMachine"
    end

    phpweb.vm.provision "shell", inline: "apt-get update && apt-get install -y puppet"
    phpweb.vm.provision "puppet" do |puppet|
      puppet.manifests_path = "./manifests"
      puppet.manifest_file = "phpweb.pp"
    end
  end

  config.vm.define "memcached" do |memcached|
    memcached.vm.provider "hyperv" do |h|
      h.vmname = "XenialMemcacheMachine"
    end
  end

  config.vm.synced_folder ".", "/vagrant", disabled: false


  # config.vm.hostname = "XenialVagrantMachine"

  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y nginx
  #   systemctl status nginx
  #   systemctl enable nginx
  #   systemctl start nginx
  #   ufw allow 'Nginx Full'
  #   # cat /vagrant/chave_rsa.pub >> ~/.ssh/authorized_keys
  # SHELL

  # config.vm.provision "shell", inline: $script_mysql

  # config.vm.provision "shell",
  #   inline: "cat /vagrant/mysqld.cnf > /etc/mysql/mysql.conf.d/mysqld.cnf"
  # config.vm.provision "shell",
  #   inline: "service mysql restart"

  # config.vm.synced_folder "./configs", "/configs"
  # config.vm.synced_folder ".", "/vagrant", disabled: true

  # config.vm.provision "shell", path: "./configure-static-ip.sh"
  # config.vm.provision :reload

  # config.vm.provider "virtualbox" do |vb|
  #   vb.name = "XenialVagrantMachine"
  #   vb.gui = true
  #   vb.memory = "1024"
  #   vb.cpus = 1
  #   config.vm.network "private_network", type: "dhcp", name: "vboxnet_vagrant"
  #   # config.vm.network "private_network", ip: "192.168.50.4"
  #   vb.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
  # end
end